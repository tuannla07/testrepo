parameters:
  - name: BuildNumber
    type: string
    default: ""

  - name: MainVersion
    type: string
    default: ""

  - name: Tag
    type: string
    default: "latest" # should be latest in prod branch
    displayName: "Tag"

  - name: "PoolName"
    type: string
    default: "Azure Pipelines"
    values:
      - "Azure Pipelines"
      - "Omnia Agents"

  # EnsureVersion -> Push_ProdCloud_ProdIntent  -> Push_MigrationProdCloud_ProdIntent
stages:
  - stage: EnsureVersion
    dependsOn: []
    displayName: "Ensure Version"
    jobs:
      - job: EnsureVersionJob
        pool:
          name: ${{ parameters.PoolName }}
        steps:
          - checkout: OmniaPipelines

          - script: |
              set -euo pipefail 

              CURRENT_VALUE=${{parameters.BuildNumber}}

              if [ -z "${{ parameters.BuildNumber }}" ]; then
                echo "❌ No BuildNumber provided..."
                exit 1
              else
                echo "BuildNumber is set, using value: ${{ parameters.BuildNumber }}."
                CURRENT_VALUE=${{ parameters.BuildNumber }}
              fi

              if ! [[ "$CURRENT_VALUE" =~ ^[0-9]+$ ]]; then
                echo "❌ Invalid number in BuildNumber: $CURRENT_VALUE"
                exit 1
              fi

              echo "##vso[task.setvariable variable=BuildNumberToUse]$CURRENT_VALUE"

            displayName: "Set Build Number"

          - template: ../templates/generic-ensure-version-as-variable.yml
            parameters:
              BuildNumber: $(BuildNumberToUse)
              Tag: ${{ parameters.Tag }}
              MainVersion: ${{ parameters.MainVersion }}

          - template: ../templates/generic-set-buildnumber-on-build.yml
            parameters:
              Version: "$(Version)"
              BuildVersion: $(BuildNumberToUse)

          - script: |
              echo "Setting version: $(Version)"
              echo "##vso[build.addbuildtag]$(Version)"
              echo "##vso[task.setvariable variable=Version;isOutput=true]$(Version)"
            name: EnsureVersionTask
            displayName: "Setting version variable and tag"

  # ------------------------------------------------------------------
  # STAGE: Push Omnia Extensions to PROD Cloud - Prod intent
  # ------------------------------------------------------------------
  - stage: Push_ProdCloud_ProdIntent
    dependsOn: [EnsureVersion]
    displayName: "Push Prod Cloud (Prod intent)"
    jobs:
      - job: Push_ProdCloud_ProdIntentJob
        pool:
          name: ${{ parameters.PoolName }}
        variables:
          Version: $[ stageDependencies.EnsureVersion.EnsureVersionJob.outputs['EnsureVersionTask.Version'] ]
        displayName: "Push Prod Cloud (Prod intent)"
        steps:
          - checkout: OmniaPipelines
          - checkout: OmniaMono

          - template: ../templates/generic-rename-source-folders.yml
            parameters:
              RepositoryName: "OmniaMono"

          - template: ../templates/omnia-build-push-extension-to-cloud.yml
            parameters:
              Tag: ${{ parameters.Tag }}
              Version: "$(Version)"
              DropName: $(dropName)
              CloudClientId: "$(ProdCloudClientId)"
              CloudClientSecret: "$(ProdCloudClientSecret)"
              ApiAppBaseUrl: "$(apiappbase)"
              CloudApiAppId: "$(cloudapiappid)"
              CloudApiUrl: "$(cloudapiurl)"
              CliAppId: "$(cliappid)"
              Intent: "prod"
              Environment: "prod"

  # ------------------------------------------------------------------
  # STAGE: Push Migration Workers to PROD Cloud - Prod intent
  # ------------------------------------------------------------------
  - stage: Push_MigrationProdCloud_ProdIntent
    dependsOn: [EnsureVersion, Push_ProdCloud_ProdIntent]
    displayName: "Push Migration Workers Prod Cloud (Prod intent)"
    jobs:
      - job: Push_MigrationProdCloud_ProdIntentJob
        pool:
          name: ${{ parameters.PoolName }}
        variables:
          Version: $[ stageDependencies.EnsureVersion.EnsureVersionJob.outputs['EnsureVersionTask.Version'] ]
        displayName: "Push Migration Workers Prod Cloud (Prod intent)"
        steps:
          - checkout: OmniaPipelines
          - checkout: OmniaMono

          - template: ../templates/generic-rename-source-folders.yml
            parameters:
              RepositoryName: "OmniaMono"

          - template: ../templates/omnia-build-push-migration-extension-to-cloud.yml
            parameters:
              Tag: ${{ parameters.Tag }}
              Version: "$(Version)"
              DropName: $(dropName)
              CloudClientId: "$(ProdCloudClientId)"
              CloudClientSecret: "$(ProdCloudClientSecret)"
              ApiAppBaseUrl: "$(apiappbase)"
              CloudApiAppId: "$(cloudapiappid)"
              CloudApiUrl: "$(cloudapiurl)"
              CliAppId: "$(cliappid)"
              Intent: "prod"
              Environment: "prod"
